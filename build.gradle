plugins {
    id 'java'
    id "com.github.spacialcircumstances.gradle-cucumber-reporting" version "0.1.7"
}

repositories {
    mavenLocal()
    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
    gradlePluginPortal()
}

dependencies {
    compile 'org.zaproxy:zap-clientapi:1.6.0'
    compile 'org.apache.logging.log4j:log4j-api:2.11.0'
    compile 'org.apache.logging.log4j:log4j-core:2.11.0'
    compile 'io.github.bonigarcia:webdrivermanager:3.4.0'
    compile 'ru.yandex.qatools.htmlelements:htmlelements-java:1.18'
    compile 'com.pojosontheweb:monte-repack:1.0'
    compile 'ws.schild:jave-core:2.4.6'
    compile 'ws.schild:jave-all-deps:2.6.0'
    compile 'ws.schild:jave-native-linux64:2.4.6'
    compile 'ws.schild:jave-native-linux32:2.4.6'
    compile 'ws.schild:jave-native-osx64:2.4.6'
    compile 'ws.schild:jave-native-win64:2.4.6'
    compile 'ws.schild:jave-native-win32:2.4.6'
    compile 'info.cukes:cucumber-junit:1.2.5'
    compile 'info.cukes:cucumber-java8:1.2.5'
    compile 'info.cukes:cucumber-testng:1.2.5'
    compile 'org.seleniumhq.selenium:selenium-java:3.14.0'
    compile 'net.masterthought:cucumber-reporting:4.7.0'

}

group = 'co.netguru.qa'
version = '1.0'
description = 'java-framework'
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

clean {
    String screenshotsPath = "${rootDir}" + File.separator + "screenshots" + File.separator
    String logsPath = "${rootDir}" + File.separator + "logs" + File.separator
    String pageSourcesPath = "${rootDir}" + File.separator + "pageSources" + File.separator

    delete fileTree(dir: screenshotsPath, include: "*.png")
    println screenshotsPath
    delete fileTree(dir: logsPath, include: "*.html")
    println logsPath
    delete fileTree(dir: pageSourcesPath, include: "*.html")
    println pageSourcesPath
}

configurations {
    cucumberRuntime.extendsFrom testRuntime
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            def tags = "~@wip"
            if (project.hasProperty('myTags')) {
                tags = myTags
            }
            String reports = "json:target" + File.separator + "cucumber-reports" + File.separator + "json" + File.separator + "cucumber.json"
            String features = "src" + File.separator + "test" + File.separator + "resources/" + File.separator + "features"

            args = ['--plugin', 'pretty', '--plugin', reports,
                    '--tags', tags,
                    '--glue', 'steps', features]
        }
    }
}

cucumberReports {
    String outputPath = "target" + File.separator + "cucumber" + File.separator + "html"
    String reportsPath = "target" + File.separator + "cucumber-reports" + File.separator + "json" + File.separator + "cucumber.json"

    outputDir = file(outputPath)
    buildId = '0'
    reports = files(reportsPath)
}
