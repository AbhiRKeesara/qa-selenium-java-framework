plugins {
    id 'java'
    id "com.github.spacialcircumstances.gradle-cucumber-reporting" version "0.1.7"
}

repositories {
    mavenLocal()
    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

dependencies {
    compile 'org.zaproxy:zap-clientapi:1.6.0'
    compile 'junit:junit:4.12'
    compile 'org.apache.logging.log4j:log4j-api:2.11.0'
    compile 'org.apache.logging.log4j:log4j-core:2.11.0'
    compile 'io.github.bonigarcia:webdrivermanager:3.4.0'
    compile 'ru.yandex.qatools.htmlelements:htmlelements-java:1.18'
    compile 'com.pojosontheweb:monte-repack:1.0'
    compile 'ws.schild:jave-core:2.4.6'
    compile 'ws.schild:jave-all-deps:2.4.6'
    compile group: 'info.cukes', name: 'cucumber-junit', version: '1.2.5'
    compile 'info.cukes:cucumber-java8:1.2.5'
    compile 'info.cukes:cucumber-testng:1.2.5'
    compile 'org.testng:testng:6.14.3'
    compile 'org.seleniumhq.selenium:selenium-java:3.14.0'
    compile group: 'net.masterthought', name: 'cucumber-reporting', version: '4.7.0'

}

group = 'co.netguru.qa'
version = '1.0'
description = 'java-framework'
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

clean {
    delete fileTree(dir: "${rootDir}/screenshots/", include: "*.png")
    println "${rootDir}/screenshots/"
    delete fileTree(dir: "${rootDir}/logs/", include: "*.html")
    println "${rootDir}/logs/"
    delete fileTree(dir: "${rootDir}/pageSources/", include: "*.html")
    println "${rootDir}/logs/"
}

configurations {
    cucumberRuntime.extendsFrom testRuntime
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            def tags = "@test"
            if (project.hasProperty('myTags')) {
                tags = myTags
            }
            args = ['--plugin', 'pretty', '--plugin', 'json:target/cucumber-reports/json/cucumber.json',
                    '--tags', tags,
                    '--glue', 'steps', 'src/test/resources/features']
        }
    }
}

cucumberReports {
    outputDir = file('target/cucumber/html')
    buildId = '0'
    reports = files('target/cucumber-reports/json/cucumber.json')
}